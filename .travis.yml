notifications:
  email:
    on_success: never

cache:
  directories:
    - $HOME/.cache/pip

env:
  - IMGAUG_NO_CV2_INSTALLED_CHECK=TRUE

stage_test: &stage_test
  os: linux
  dist: trusty
  language: python
  install:
    - echo "INSTALL"
  script:
    - echo "SCRIPT"


matrix:
  include:
    - python: 2.7
      env: PYTORCH_WHEEL=https://download.pytorch.org/whl/cpu/torch-1.0.1.post2-cp27-cp27mu-linux_x86_64.whl
    - python: 3.5
      env: PYTORCH_WHEEL=https://download.pytorch.org/whl/cpu/torch-1.0.1.post2-cp35-cp35m-linux_x86_64.whl
    - python: 3.6
      env: PYTORCH_WHEEL=https://download.pytorch.org/whl/cpu/torch-1.0.1.post2-cp36-cp36m-linux_x86_64.whl
    - python: 3.6
      env: TEST_MODE=DOCS
    - python: 3.7
      env: PYTORCH_WHEEL=https://download.pytorch.org/whl/cpu/torch-1.0.1.post2-cp37-cp37m-linux_x86_64.whl
      dist: xenial
      sudo: true

install:
#- pip install --upgrade pip pytest
#- if [[ "$TEST_MODE" == "DOCS" ]]; then pip install .; fi
#- if [[ -n "$PYTORCH_WHEEL" ]]; then pip install "$PYTORCH_WHEEL" torchvision; fi
#- if [[ "$TEST_MODE" != "DOCS" ]]; then pip install .[tests]; fi
#- if [[ "$TEST_MODE" != "DOCS" ]]; then pip install flake8 flake8-docstrings; fi
  - echo "INSTALL"

script:
#  - if [[ "$TEST_MODE" == "DOCS" ]]; then python tools/make_transforms_docs.py check README.md; fi
#  - if [[ "$TEST_MODE" != "DOCS" ]]; then pytest; fi
#  - if [[ "$TEST_MODE" != "DOCS" ]]; then flake8; fi
  - echo "SCRIPT"


stages:
  - test
#  - deploy



jobs:
  include:
    - stage: test
      <<: *stage_test
      python: 2.7
      env: PYTORCH_WHEEL=https://download.pytorch.org/whl/cpu/torch-1.0.1.post2-cp27-cp27mu-linux_x86_64.whl

    #- stage: deploy
#      deploy:
#        provider: pypi
#        user: $PYPI_USER
#        password: $PYPI_PASSWORD
#        on:
#          tags: true
#        server: $PYPI_SERVER
#        skip_cleanup: true
#    - stage: deploy
#      before_deploy:
#        - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
#        - bash miniconda.sh -b -p $HOME/miniconda
#        - export PATH="$HOME/miniconda/bin:$PATH"
#        - hash -r
#        - conda config --set always_yes yes --set changeps1 no
#        - conda update -q conda
#        - conda info -a
#        - conda create -q -n deploy-environment -c pytorch python=$TRAVIS_PYTHON_VERSION
#        - source activate deploy-environment
#        - cd conda.recipe
#        on:
#          tags: true
#      deploy:
#        provider: script
#        script: sh build_upload.sh
#        on:
#          tags: true
#        skip_cleanup: true
